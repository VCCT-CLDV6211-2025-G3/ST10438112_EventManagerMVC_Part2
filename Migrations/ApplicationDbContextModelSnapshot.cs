// <auto-generated />
using System;
using EventManagerMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventManagerMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventManagerMVC.Models.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BookingID");

                    b.HasIndex("EventID");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingID = 4,
                            BookingDate = new DateTime(2025, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 4,
                            Status = "Confirmed"
                        },
                        new
                        {
                            BookingID = 5,
                            BookingDate = new DateTime(2025, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 5,
                            Status = "Confirmed"
                        },
                        new
                        {
                            BookingID = 6,
                            BookingDate = new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 6,
                            Status = "Confirmed"
                        },
                        new
                        {
                            BookingID = 7,
                            BookingDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 7,
                            Status = "Confirmed"
                        },
                        new
                        {
                            BookingID = 8,
                            BookingDate = new DateTime(2027, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 8,
                            Status = "Confirmed"
                        });
                });

            modelBuilder.Entity("EventManagerMVC.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("EventTime")
                        .HasColumnType("time");

                    b.Property<int>("EventTypeID")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("/images/placeholder.png");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.HasIndex("EventTypeID");

                    b.HasIndex("VenueID");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventID = 4,
                            Description = "A fun activity for hotel guests",
                            EventDate = new DateTime(2026, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Snow Skiing Competition",
                            EventTime = new TimeSpan(0, 0, 0, 0, 0),
                            EventTypeID = 3,
                            VenueID = 4
                        },
                        new
                        {
                            EventID = 5,
                            Description = "An annual speech to commemorate the birth of Christ",
                            EventDate = new DateTime(2026, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Pope's Christmas Address",
                            EventTime = new TimeSpan(0, 0, 0, 0, 0),
                            EventTypeID = 2,
                            VenueID = 5
                        },
                        new
                        {
                            EventID = 6,
                            Description = "An exciting afternoon experience for booked customers",
                            EventDate = new DateTime(2026, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Sunday Paragliding",
                            EventTime = new TimeSpan(0, 0, 0, 0, 0),
                            EventTypeID = 3,
                            VenueID = 6
                        },
                        new
                        {
                            EventID = 7,
                            Description = "A public event where the King meets the public around the Palace",
                            EventDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "His Majesty's Cancer Fundraiser",
                            EventTime = new TimeSpan(0, 0, 0, 0, 0),
                            EventTypeID = 4,
                            VenueID = 7
                        },
                        new
                        {
                            EventID = 8,
                            Description = "High stakes competition where groups of students compete to deploy an SaaS infrastructure under 60 minutes",
                            EventDate = new DateTime(2027, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Cloud Development Team Death Match 2027",
                            EventTime = new TimeSpan(0, 0, 0, 0, 0),
                            EventTypeID = 1,
                            VenueID = 8
                        });
                });

            modelBuilder.Entity("EventManagerMVC.Models.EventType", b =>
                {
                    b.Property<int>("EventTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventTypeID"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventTypeID");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            EventTypeID = 1,
                            TypeName = "Competition"
                        },
                        new
                        {
                            EventTypeID = 2,
                            TypeName = "Conference"
                        },
                        new
                        {
                            EventTypeID = 3,
                            TypeName = "Tourist Activity"
                        },
                        new
                        {
                            EventTypeID = 4,
                            TypeName = "Fundraiser"
                        },
                        new
                        {
                            EventTypeID = 5,
                            TypeName = "Corporate"
                        });
                });

            modelBuilder.Entity("EventManagerMVC.Models.Venue", b =>
                {
                    b.Property<int>("VenueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueID"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("/images/placeholder.png");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("VenueID");

                    b.HasIndex("VenueName")
                        .IsUnique();

                    b.ToTable("Venues");

                    b.HasData(
                        new
                        {
                            VenueID = 4,
                            Capacity = 250,
                            ImageURL = "<placeholderURL>",
                            IsAvailable = false,
                            Location = "Italy",
                            VenueName = "Selva Gardina"
                        },
                        new
                        {
                            VenueID = 5,
                            Capacity = 9000,
                            ImageURL = "<placeholderURL>",
                            IsAvailable = false,
                            Location = "Rome, Italy",
                            VenueName = "Vatican"
                        },
                        new
                        {
                            VenueID = 6,
                            Capacity = 50,
                            ImageURL = "<placeholderURL>",
                            IsAvailable = false,
                            Location = "Cape Town, South Africa",
                            VenueName = "Table Mountain"
                        },
                        new
                        {
                            VenueID = 7,
                            Capacity = 1000,
                            ImageURL = "<placeholderURL>",
                            IsAvailable = false,
                            Location = "London, UK",
                            VenueName = "Buckingham Palace"
                        },
                        new
                        {
                            VenueID = 8,
                            Capacity = 40,
                            ImageURL = "<placeholderURL>",
                            IsAvailable = false,
                            Location = "Newlands, Cape Town",
                            VenueName = "Varsity College"
                        });
                });

            modelBuilder.Entity("EventManagerMVC.Models.Booking", b =>
                {
                    b.HasOne("EventManagerMVC.Models.Event", "Event")
                        .WithMany("Bookings")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventManagerMVC.Models.Event", b =>
                {
                    b.HasOne("EventManagerMVC.Models.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventManagerMVC.Models.Venue", "Venue")
                        .WithMany("Events")
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventManagerMVC.Models.Event", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("EventManagerMVC.Models.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("EventManagerMVC.Models.Venue", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
