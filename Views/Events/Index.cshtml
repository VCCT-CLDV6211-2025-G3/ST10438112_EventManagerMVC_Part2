@model IEnumerable<EventManagerMVC.Models.Event>

@{
    ViewData["Title"] = "Index";
    bool? avail = ViewBag.IsAvailable as bool?;
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<h1>Events</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Event</a>
</p>

<form method="get" asp-action="Index" class="form-inline mb-3">
    <div class="form-group mr-3 mb-2">
        <label for="eventTypeId" class="mr-2">Event Type:</label>
        <select id="eventTypeId" name="eventTypeId" class="form-control" asp-items="ViewBag.EventTypes">
            <option value="">-- All --</option>
        </select>
    </div>
    <div class="form-group mr-3 mb-2">
        <label for="startDate" class="mr-2">Start Date:</label>
        <input id="startDate" name="startDate" type="date" class="form-control" value="@ViewBag.StartDate" />
    </div>
    <div class="form-group mr-3 mb-2">
        <label for="endDate" class="mr-2">End Date:</label>
        <input id="endDate" name="endDate" type="date" class="form-control" value="@ViewBag.EndDate" />
    </div>
    <div class="form-group mr-3 mb-2">
        <label for="IsAvailable" class="mr-2">Venue Availability:</label>
        <select id="IsAvailable" name="IsAvailable" class="form-control">
            <option value="">-- All --</option>
            @if (avail == true)
            {
                <option value="true" selected>Available</option>
                <option value="false">Unavailable</option>
            }
            else if (avail == false)
            {
                <option value="true">Available</option>
                <option value="false" selected>Unavailable</option>
            }
            else
            {
                <option value="true">Available</option>
                <option value="false">Unavailable</option>
            }
        </select>
    </div>
    <button type="submit" class="btn btn-secondary mb-2">Search</button>
</form>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Image</th>
            <th>@Html.DisplayNameFor((Event e) => e.EventName)</th>
            <th>@Html.DisplayNameFor((Event e) => e.EventDate)</th>
            <th>@Html.DisplayNameFor((Event e) => e.Description)</th>
            <th>Event Type</th>
            <th>@Html.DisplayNameFor((Event e) => e.Venue.Location)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        var placeholder = Url.Content("~/images/No-Image-Placeholder.png");
        <tr>
            <td>
                <img src="@item.ImageURL"
                     alt="Event Image"
                     style="max-height: 100px;"
                     onerror="this.onerror=null;this.src='@placeholder';" />
            </td>
            <td>@Html.DisplayFor(modelItem => item.EventName)</td>
            <td>@Html.DisplayFor(modelItem => item.EventDate)</td>
            <td>@Html.DisplayFor(modelItem => item.Description)</td>
            <td>@item.EventType?.TypeName</td>
            <td>@Html.DisplayFor(modelItem => item.Venue.Location)</td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.EventID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.EventID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.EventID">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>